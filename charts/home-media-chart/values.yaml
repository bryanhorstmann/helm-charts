# -- A list of host rules used to configure the Ingress
replicaCount: 1

image:
  # -- Repository to use for the deployment
  repository: nginx

  # -- Image tag to use for the deployment
  tag: ""

# -- The deployment strategy to use to replace existing pods with new ones
rolloutStrategy: {}

# -- A map of environment variables to set in the container
env: {}
  # UMASK: "022"
  # TZ: Africa/Johannesburg

# -- Compute Resources required by this container
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Periodic probe of container liveness. Container will be restarted if the probe fails
livenessProbe: {}

# -- Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails
readinessProbe: {}

# -- StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully
startupProbe: {}

# -- List of volumes that can be mounted by containers belonging to the pod
volumes: []
# - name: config
#   hostPath:
#     path: /data/kubernetes/radarr/config
#     type: DirectoryOrCreate

# -- Pod volumes to mount into the container's filesystem
volumeMounts: []
# - name: config
#   mountPath: /config

# -- Host networking requested for this pod. Use the host's network namespace
hostNetwork: false

service:
  # -- Create a service object
  enabled: true

  # -- Determines how the Service is exposed
  type: ClusterIP

  # -- The list of ports that are exposed by this service. Overwrites `service.port` and `service.targetPort`
  ports: []

  # -- The port that will be exposed by this service. Has no effect if `service.ports` is configured
  port: 80

  # -- Port to access on the pods targeted by the service. Has no effect if `service.ports` is configured
  targetPort: ""

ingress:
  # -- Create an ingress object
  enabled: false

  # -- Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata
  annotations: {}
    # cert-manager.io/cluster-issuer: letsencrypt
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"

  # -- A list of host rules used to configure the Ingress
  hosts: []
  # - host: chart-example.local
  #   paths:
  #     - path: /
  #       pathType: ImplementationSpecific

  # -- TLS configuration
  tls: []
  # - secretName: chart-example-tls
  #   hosts:
  #     - chart-example.local

# -- A list of configMaps objects to create. See values.yaml for an example of the object
configMaps: []
  # - name: foo
  #   data:
  #     nginx.conf: |
  #       user  nginx;
  #       worker_processes  1;
  #       etc...
