replicaCount: 1

image:
  repository: nginx
  tag: ""

rolloutStrategy:
  rollingUpdate:
    maxSurge: 50%
    maxUnavailable: 0
  type: RollingUpdate

env: {}
  # UMASK: "022"
  # TZ: Africa/Johannesburg

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Define a Kubernetes Liveness Probe
livenessProbe: {}

# -- Define a Kubernetes Readiness Probe
readinessProbe: {}

# -- Define a Kubernetes Startup Probe
startupProbe: {}

volumes: []
# - name: config
#   hostPath:
#     path: /data/kubernetes/radarr/config
#     type: DirectoryOrCreate

volumeMounts: []
# - name: config
#   mountPath: /config

hostNetwork: false

service:
  # -- Create a service object
  enabled: true

  # -- Determines how the Service is exposed
  type: ClusterIP

  # -- The list of ports that are exposed by this service. Overwrites `service.port` and `service.targetPort`
  ports: []

  # -- The port that will be exposed by this service. Has no effect if `service.ports` is configured
  port: 80

  # -- Port to access on the pods targeted by the service. Has no effect if `service.ports` is configured
  targetPort: ""

ingress:
  enabled: false
  annotations: {}
    # cert-manager.io/cluster-issuer: letsencrypt
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts: []
  # - host: chart-example.local
  #   paths:
  #     - path: /
  #       pathType: ImplementationSpecific
  tls: []
  # - secretName: chart-example-tls
  #   hosts:
  #     - chart-example.local
